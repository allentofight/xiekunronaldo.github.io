---
layout: post
title: "Build"
date: 2014-10-10 09:20:02 +0800
comments: true
categories: Sencha Touch
---
#### Adding Non-MVC Folders to Your Build Package
For the FindACab app, I have added the utils folder to the app classpath in ./sencha/sencha.cfg:

```javascriptapp.classpath=${app.dir}/app.js,${app.dir}/app,${app.dir}/utils
```


#### Adding Extra Resources to Your Build Package
In other situations, you might want to include extra resources to your build package — for example, a folder with images or a folder with JSON data. There are two ways to include these in your build. I will explain both. First (the easy way, shown in Example 14-1), you can add the folder to the resources array in the `app.json` file. By default, Sencha Cmd already created a selection.

```//Example 14-1. Additional resources that need to be copied during the build process

"resources": [ 
	"resources/images", 
	"resources/css", 
	"resources/icons", 
	"resources/startup"],```
`TIP`
Additional JavaScripts or stylesheets can be entered into the `js` or `css` arrays.
The other way of adding resources to your build is what I call the hardcore way, but it’s kinda cool so I want to mention it.
Sencha Cmd has Apache Ant integration. You can modify the Ant build script build.xml totally to your own needs.
See Example 14-2; this little Ant script copies a data folder from the application root to the production build folder. Isn’t it awesome?
```
// Example 14-2. Copying a folder to a different location
<target name="-after-build"/> 
<target name="build"		depends="init,-before-build,-build,-after-build" 		description="Builds the application"/>
		<copy todir="${build.dir}/data" overwrite="true"> 	<fileset dir="${basedir}/data">		<include name="**/*" /> 	</fileset></copy>```
In the next sections, you’ll learn how to:

* Create a test build with Sencha Cmd* Create a production build with Sencha Cmd* Create a native build with Sencha Cmd and Adobe PhoneGap
#### Creating a Test Build with Sencha Cmd
With Sencha Cmd on the command line, you can generate a build package optimized for test environments. On the command line, navigate to the app folder and run the following:
```
	sencha app build testing```
`NOTE`
I’m often asked which tools are good for testing a Sencha Touch application. For UI testing, Siesta is a good tool; for syntax testing, you could use JS Lint; and for unit testing, Jasmine is a popular testing tool. For more information, check out this [great blog post](http://www.sencha.com/blog/automating-unit-tests), which contains all the links to the tools

#### Creating a Production Build with Sencha Cmd
With Sencha Cmd on the command line, you can generate a build package optimized for production. On the command line, navigate to the app folder and run the following:

```
	sencha app build
```

#### Creating a Native Build with Sencha Cmd and Adobe PhoneGap

There are three products you can use to create a native app from a Sencha Touch code base:

* Sencha Mobile Packager 
* Adobe PhoneGap 
* Apache Cordova
